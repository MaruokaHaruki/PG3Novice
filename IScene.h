/*********************************************************************
 * \file   IScene.h
 * \brief`
 *
 * \author Harukichimaru
 * \date   December 2024
 * \note
 *********************************************************************/
#pragma once

// シーンの種類
enum SCENE { TITLE, GAME, CLEAR };

///=============================================================================
///						インターフェースシーン
class IScene {
protected:
	//シーン番号を保存する変数
	static int sceneNo;

	///--------------------------------------------------------------
	///							メンバ関数
	// NOTE:継承先で実装される関数。抽象クラスなので純粋仮想関数とする。
public:

	/// \brief 初期化
	virtual void Initialize() = 0;

	/// \brief 更新
	virtual void Update() = 0;

	/// \brief 描画 
	virtual void Draw() = 0;

	/**----------------------------------------------------------------------------
	 * \brief  ~IScene 抽象クラスのデストラクタ
	 * NOTE: 仮想デストラクタを用意することで、継承先のクラスのデストラクタが呼ばれるようにする。
	 */
	virtual ~IScene() {}

	/**----------------------------------------------------------------------------
	 * \brief  GetSceneNo シーン番号を取得する
	 * \return
	 */
	int GetSceneNo() { return sceneNo; }

	///--------------------------------------------------------------
	///							静的メンバ関数
private:

	///--------------------------------------------------------------
	///							入出力関数
public:


	///--------------------------------------------------------------
	///							メンバ変数
private:




};

